Q1.
SELECT * FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 100000;

Q2.
SELECT NAME FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 120000;

Q3.
SELECT * FROM CITY;

Q4.
SELECT * FROM CITY WHERE ID = 1661;

Q5.
SELECT * FROM CITY WHERE COUNTRYCODE = 'JPN';

Q6.
SELECT NAME FROM CITY WHERE COUNTRYCODE = 'JPN';

Q7.
SELECT CITY, STATE FROM STATION;

Q8.
SELECT DISTINCT CITY FROM STATION WHERE MOD(ID,2) = 0 ORDER BY CITY;

Q9.
SELECT (COUNT(CITY) - COUNT(DISTINCT(CITY))) FROM STATION;

Q10.
SELECT CITY, LENGTH(CITY) FROM STATION ORDER BY LENGTH(CITY) LIMIT 1
UNION
SELECT CITY, LENGTH(CITY) FROM STATION ORDER BY LENGTH(CITY) DESC LIMIT 1;

Q11.
SELECT DISTINCT CITY FROM STATION WHERE CITY LIKE ('%A', '%E', '%I', '%O', '%U')

Q12.
SELECT DISTINCT(CITY) FROM STATION WHERE CITY LIKE '%a' OR CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' OR CITY LIKE '%u';
SELECT DISTINCT CITY FROM STATION WHERE CITY REGEXP '[aeiouAEIOU]$';

Q13.
SELECT DISTINCT CITY FROM STATION WHERE CITY NOT LIKE ('%A', '%E', '%I', '%O', '%U')

Q14.
SELECT DISTINCT CITY FROM STATION WHERE CITY NOT REGEXP '[aeiouAEIOU]$';

Q15.
SELECT DISTINCT CITY FROM STATION WHERE CITY NOT RLIKE '^[aeiouAEIOU]' OR CITY NOT REGEXP '[aeiouAEIOU]$';

Q16.
SELECT DISTINCT CITY FROM STATION WHERE CITY NOT RLIKE '^[aeiouAEIOU]' AND CITY NOT REGEXP '[aeiouAEIOU]$';

Q17.
SELECT p.product_id, p.product_name FROM Product p
LEFT JOIN Sales s
ON p.product_id = s.product_id
GROUP BY p.product_id
HAVING MIN(sale_date) >= '2019-01-01' AND MAX(sale_date) <= '2019-03-31';

Q18.
SELECT DISTINCT author_id FROM Views WHERE author_id = viewer_id;

Q19.
SELECT ROUND(100*d2.immediate_orders/COUNT(d1.delivery_id), 2) AS immediate_percentage
FROM Delivery d1,
     (SELECT COUNT(order_date) AS immediate_orders
     FROM Delivery WHERE (order_date = customer_pref_delivery_date)) d2;
    
Q20.
select distinct ad_id, ifnull(
        round(
            sum(action = 'Clicked') / (sum(action = 'Clicked') + sum(action = 'Viewed')) * 100, 2
        ) , 0
    ) as ctr
    from Ads
    group by ad_id
    order by ctr desc, ad_id;
    
Q21.
SELECT employee_id, COUNT(team_id) OVER (PARTITION BY team_id) team_size
FROM Employee;

Q22.
SELECT
c.country_name,
CASE (
    WHEN AVG(w.weather_state) <= 15 THEN 'Cold'
    WHEN AVG(w.weather_state) >= 25 THEN 'Hot' 
    'Warm' END ) AS weather_type
FROM
Weather w
INNER JOIN 
Countries c
ON 
w.country_id = c.country_id
WHERE
LEFT(w.day, 7) = '2019-11'
GROUP BY c.country_name;

Q23.
select product_id, ifnull(round(sum(prices_sum) / sum(units), 2), 0) as average_price
    from (
        select p.product_id as product_id, units, price * units as prices_sum
            from Prices p left join UnitsSold u
            on p.product_id = u.product_id and purchase_date between start_date and end_date
    ) as temp
    group by product_id;

Q24.
select player_id, min(event_date) as first_login
from Activity 
group by player_id;

Q25.
SELECT player_id, device_id
FROM (SELECT player_id, device_id, event_date, MIN(event_date) OVER (PARTITION BY player_id ORDER BY event_date) AS first_login
	    FROM Activity) t1
WHERE event_date = first_login;

Q26.
select a.product_name, sum(unit) as unit
from Products a
left join Orders b
on a.product_id = b.product_id
where b.order_date between '2020-02-01' and '2020-02-29'
group by a.product_id
having sum(unit) >= 100;

Q27.

